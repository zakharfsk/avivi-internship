version: '3.9'
services:
  server:
    container_name: server
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app
      - ./templates:/app/templates
      - ./static:/app/static
      - media:/app/media
    env_file:
      - .env
    environment:
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
    depends_on:
      - postgres

  celery:
    container_name: celery
    restart: always
    build: .
    entrypoint: '/app/entrypoints/celery-entrypoint.sh'
    volumes:
      - ./:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  celery_beat:
    container_name: celery_beat
    restart: always
    build: .
    entrypoint: '/app/entrypoints/celery-beat-entrypoint.sh'
    volumes:
      - ./:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx-conf.d:/etc/nginx/conf.d
      - ./static:/app/static
      - media:/app/media
    depends_on:
      - server
    restart: unless-stopped

  serveo:
    image: jacobtomlinson/serveo:latest
    container_name: serveo
    entrypoint: "/app/entrypoints/serveo-entrypoint.sh"
    command: "echo -e 'y' | ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa > /dev/null 2>&1"
    volumes:
      - ./:/app
      - ~/.ssh:/root/.ssh
    environment:
      LOCAL_HOST: nginx
      LOCAL_PORT: 80
      DOMAIN: avivi-internship
    depends_on:
      - nginx

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  static:
  media:
  postgres_data:
  redis_data:

